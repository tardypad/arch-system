#!/bin/sh
# commands used:
# - mktemp
# - pacman

init_variables() {
  COMMAND=${0##*/}

  TMP_DIR="$( mktemp -d )"
  trap 'rm -rf "${TMP_DIR}"' EXIT

  IGNORE_FILE='/dev/null'
}

show_usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>] [ignore_file}

	List files not owned by any package.
	It only checks a few root folders.

	Needs to be run as a root user

	Options:
	  -h    show this message only

	Operands:
	  ignore_file  file containing a list of file paths to ignore
	               lines starting with # are ignored
	EOF
}

parse_command_line() {
  while getopts h OPT; do
    case "${OPT}" in
      h) show_usage; exit 0 ;;
      ?) exit_error ;;
    esac
  done

  shift $(( OPTIND - 1 ))

  [ -n "$1" ] && IGNORE_FILE="$1"
}

exit_error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} -h' for more information."
  exit 1
} >&2

check_root_user() {
  [ "$( id -u )" -ne 0 ] && exit_error 'The script must be run as root'
}

list_files() {
  pacman -Qlq \
    | sed -e 's|/$||' \
    | sort -u \
    > "${TMP_DIR}/packages_files"

  IGNORE_PATH_ARGS="$(
    printf -- "-path '%s' -prune -o " $( sed 's/\*/\\*/g' "${IGNORE_FILE}" | grep -vE '^$|^#' ) \
      | sed -e 's/\\//g' -e 's/ -o $//'
  )"
  eval find /boot /etc /opt /usr /var ! \\\( "${IGNORE_PATH_ARGS}" \\\) \
    | sort -u \
    > "${TMP_DIR}/all_files"

  comm -13 "${TMP_DIR}/packages_files" "${TMP_DIR}/all_files"
}

init_variables
parse_command_line "$@"

check_root_user

list_files
