#!/bin/sh
# commands used:
# - mktemp
# - pacman

init_variables() {
  COMMAND=${0##*/}

  TMP_DIR="$( mktemp -d )"
  trap 'rm -rf "${TMP_DIR}"' EXIT
}

show_usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>]

	List files not owned by any package.
	It only checks a few root folders and ignore some blacklisted paths

	Needs to be run as a root user

	Options:
	  -h    show this message only
	EOF
}

parse_command_line() {
  while getopts h OPT; do
    case "${OPT}" in
      h) show_usage; exit 0 ;;
      ?) exit_error ;;
    esac
  done

  shift $(( OPTIND - 1 ))
}

exit_error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} -h' for more information."
  exit 1
} >&2

check_root_user() {
  [ "$( id -u )" -ne 0 ] && exit_error 'The script must be run as root'
}

list_files() {
  pacman -Qlq \
    | sed -e 's|/$||' \
    | sort -u \
    > "${TMP_DIR}/packages_files"

  find /boot /etc /opt /usr /var ! \( \
         -path '/boot/EFI' -prune \
      -o -path '/boot/grub' -prune \
      -o -path '/boot/initramfs-*' -prune \
      -o -path '/etc/adjtime' -prune \
      -o -path '/etc/ca-certificates' -prune \
      -o -path '/etc/group.OLD-' -prune \
      -o -path '/etc/group-' -prune \
      -o -path '/etc/gshadow.OLD-' -prune \
      -o -path '/etc/gshadow-' -prune \
      -o -path '/etc/hostname' -prune \
      -o -path '/etc/ld.so.cache' -prune \
      -o -path '/etc/localtime' -prune \
      -o -path '/etc/machine-id' -prune \
      -o -path '/etc/NetworkManager/system-connections' -prune \
      -o -path '/etc/os-release' -prune \
      -o -path '/etc/pacman.d/gnupg' -prune \
      -o -path '/etc/passwd.OLD' -prune \
      -o -path '/etc/passwd-' -prune \
      -o -path '/etc/.pwd.lock' -prune \
      -o -path '/etc/shadow.OLD-' -prune \
      -o -path '/etc/shadow-' -prune \
      -o -path '/etc/ssl/certs' -prune \
      -o -path '/etc/systemd/system' -prune \
      -o -path '/etc/systemd/user/sockets.target.wants' -prune \
      -o -path '/etc/.updated' -prune \
      -o -path '/usr/lib/gdk-pixbuf-*/*/loaders.cache' -prune \
      -o -path '/usr/lib/ghc-*/package.conf.d/*.conf' -prune \
      -o -path '/usr/lib/gio/modules/giomodule.cache' -prune \
      -o -path '/usr/lib/gtk-*/*/immodules.cache' -prune \
      -o -path '/usr/lib/locale/locale-archive' -prune \
      -o -path '/usr/lib/udev/hwdb.bin' -prune \
      -o -path '/usr/share/applications/mimeinfo.cache' -prune \
      -o -path '/usr/share/fonts/*/fonts.dir' -prune \
      -o -path '/usr/share/fonts/*/fonts.scale' -prune \
      -o -path '/usr/share/glib-2.0/schemas/gschemas.compiled' -prune \
      -o -path '/usr/share/icons/*/icon-theme.cache' -prune \
      -o -path '/usr/share/info/dir' -prune \
      -o -path '/usr/share/mime' -prune \
      -o -path '/var/cache' -prune \
      -o -path '/var/db/sudo/lectured' -prune \
      -o -path '/var/lib' -prune \
      -o -path '/var/log' -prune \
      -o -path '/var/spool' -prune \
      -o -path '/var/tmp' -prune \
      -o -path '/var/.updated' -prune \
    \) \
    | sort -u \
    > "${TMP_DIR}/all_files"

  comm -13 "${TMP_DIR}/packages_files" "${TMP_DIR}/all_files"
}

init_variables
parse_command_line "$@"

check_root_user

rm -rf "${TMP_DIR}"
mkdir -p "${TMP_DIR}"

list_files
